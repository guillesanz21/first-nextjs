{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guill\\\\git\\\\nextjs\\\\pages\\\\post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\n\nconst Post = props => __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 25\n  }\n}, \"YOU ARE LOOKING AT POST #\", props.id);\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=1\");\n  return query;\n};\n\nexport default Post; // ###################### TWO WAYS TO FETCH THE QUERY ######################\n\n/*\r\n// ########## THE FIRST ONE ############\r\n// Using getInitialProps to fetch the query\r\nconst Post = (props) => <h1>YOU ARE LOOKING AT POST #{props.id}</h1>;\r\nPost.getInitialProps = async ({ query }) => {\r\n  return query;\r\n};\r\nexport default Post;\r\n*/\n\n/*\r\n// ########## THE OTHER ONE ############\r\n// The same, using a High Order Component called withRouter to fetch the query\r\nimport { withRouter } from \"next/router\";\r\nconst Post = (props) => <h1>YOU ARE LOOKING AT POST #{props.router.query.id}</h1>;\r\nexport default withRouter(Post);\r\n*/","map":{"version":3,"sources":["C:/Users/guill/git/nextjs/pages/post.js"],"names":["axios","Post","props","id","getInitialProps","query","res","get"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA8BA,KAAK,CAACC,EAApC,CAAxB;;AAEAF,IAAI,CAACG,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1C,QAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAChB,wDADgB,CAAlB;AAGA,SAAOF,KAAP;AACD,CALD;;AAOA,eAAeJ,IAAf,C,CAEA;;AAEA;;;;;;;;;;AAUA","sourcesContent":["import axios from \"axios\";\r\n\r\nconst Post = (props) => <h1>YOU ARE LOOKING AT POST #{props.id}</h1>;\r\n\r\nPost.getInitialProps = async ({ query }) => {\r\n  const res = await axios.get(\r\n    \"https://jsonplaceholder.typicode.com/comments?postId=1\"\r\n  );\r\n  return query;\r\n};\r\n\r\nexport default Post;\r\n\r\n// ###################### TWO WAYS TO FETCH THE QUERY ######################\r\n\r\n/*\r\n// ########## THE FIRST ONE ############\r\n// Using getInitialProps to fetch the query\r\nconst Post = (props) => <h1>YOU ARE LOOKING AT POST #{props.id}</h1>;\r\nPost.getInitialProps = async ({ query }) => {\r\n  return query;\r\n};\r\nexport default Post;\r\n*/\r\n\r\n/*\r\n// ########## THE OTHER ONE ############\r\n// The same, using a High Order Component called withRouter to fetch the query\r\nimport { withRouter } from \"next/router\";\r\nconst Post = (props) => <h1>YOU ARE LOOKING AT POST #{props.router.query.id}</h1>;\r\nexport default withRouter(Post);\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}